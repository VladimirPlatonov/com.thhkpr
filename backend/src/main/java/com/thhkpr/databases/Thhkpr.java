/*
 * This file is generated by jOOQ.
 */
package com.thhkpr.databases;


import com.thhkpr.databases.tables.Settings;
import com.thhkpr.databases.tables.Storage;
import com.thhkpr.databases.tables.Things;
import com.thhkpr.databases.tables.Users;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Thhkpr extends SchemaImpl {

    private static final long serialVersionUID = -1200654412;

    /**
     * The reference instance of <code>thhkpr</code>
     */
    public static final Thhkpr THHKPR = new Thhkpr();

    /**
     * The table <code>thhkpr.settings</code>.
     */
    public final Settings SETTINGS = com.thhkpr.databases.tables.Settings.SETTINGS;

    /**
     * The table <code>thhkpr.storage</code>.
     */
    public final Storage STORAGE = com.thhkpr.databases.tables.Storage.STORAGE;

    /**
     * The table <code>thhkpr.things</code>.
     */
    public final Things THINGS = com.thhkpr.databases.tables.Things.THINGS;

    /**
     * The table <code>thhkpr.users</code>.
     */
    public final Users USERS = com.thhkpr.databases.tables.Users.USERS;

    /**
     * No further instances allowed
     */
    private Thhkpr() {
        super("thhkpr", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Settings.SETTINGS,
            Storage.STORAGE,
            Things.THINGS,
            Users.USERS);
    }
}
